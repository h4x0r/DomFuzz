name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Build domfuzz for integration tests
      run: cargo build --release
    
    - name: Run integration tests
      run: |
        cd tests/domfuzz_tester
        DOMFUZZ_BIN=../../target/release/domfuzz cargo run
      env:
        DOMFUZZ_BIN: ../../target/release/domfuzz

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable
    
    - name: Cache cargo registry
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-integration-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-integration-
    
    - name: Build domfuzz
      run: cargo build --release
    
    - name: Run integration tests
      run: |
        cd tests/domfuzz_tester
        DOMFUZZ_BIN=../../target/release/domfuzz cargo run
      env:
        DOMFUZZ_BIN: ../../target/release/domfuzz

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable
    
    - name: Cache cargo registry
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-audit-
    
    - name: Install cargo-audit
      run: cargo install --locked cargo-audit
    
    - name: Run cargo audit
      run: cargo audit
    
    - name: Run cargo audit for dependencies
      run: cargo audit --db advisory-db --json | tee audit-report.json
    
    - name: Upload audit report
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: security-audit-report
        path: audit-report.json

  cargo-vet:
    name: Cargo Vet
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6 # stable
    
    - name: Cache cargo registry
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-vet-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-vet-
    
    - name: Install cargo-vet
      run: cargo install --locked cargo-vet
    
    - name: Initialize cargo-vet (if needed)
      run: |
        if [ ! -f "supply-chain/config.toml" ]; then
          cargo vet init
        fi
    
    - name: Run cargo-vet check
      run: cargo vet --locked || echo "cargo-vet found issues - review required"
    
    - name: Upload vet report
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: always()
      with:
        name: cargo-vet-report
        path: supply-chain/